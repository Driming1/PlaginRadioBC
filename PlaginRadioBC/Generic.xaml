<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:helper="clr-namespace:PlaginRadioBC.Helpers.CustomStyles">

    <!-- Стиль для Border -->
    <Style TargetType="Border" x:Key="CustomBorderStyle">
        <Setter Property="BorderBrush" Value="Gray"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="CornerRadius" Value="10"/>
    </Style>


    <Style TargetType="{x:Type helper:TitleValueControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type helper:TitleValueControl}">
                    <Grid Margin="10, 10, 10, 10">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="auto"/>
                        </Grid.ColumnDefinitions>

                        <TextBlock Grid.Row="0" Grid.Column="0"  Grid.ColumnSpan="2" Text="{TemplateBinding Title}" 
                               VerticalAlignment="Top" HorizontalAlignment="Left" 
                               Margin="5,5,0,0"/>

                        <TextBlock Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2" Text="{TemplateBinding Value}" 
                               VerticalAlignment="Bottom" HorizontalAlignment="Right" 
                               FontWeight="Bold" FontSize="20" Margin="0,0,5,5"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Стиль для StackPanel -->
    <Style TargetType="StackPanel" x:Key="CustomStackPanelStyle">
        <Setter Property="Width" Value="140"/>
        <Setter Property="Height" Value="60"/>
        <Setter Property="Background" Value="LightGray"/>
        <Setter Property="Margin" Value="20,10,10,5"/>
    </Style>

    <!-- Стиль для ToggleButton внутри ComboBox -->
    <Style x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="Transparent"/>
    </Style>

    <!-- Стиль для ComboBox -->
    <Style x:Key="CustomComboBoxStyle" TargetType="ComboBox">
        <Setter Property="Margin" Value="0,5,0,10"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Border CornerRadius="3" Background="White" BorderBrush="Gray" BorderThickness="1">
                        <Grid>
                            <ToggleButton x:Name="toggleButton" Style="{StaticResource ComboBoxToggleButton}" Width="{TemplateBinding Width}" HorizontalAlignment="Stretch" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center" Margin="10,0,0,0" IsHitTestVisible="False"/>
                            <TextBlock x:Name="ContentSite" VerticalAlignment="Center" HorizontalAlignment="Left" Text="{Binding SelectedItem.Content, RelativeSource={RelativeSource Mode=TemplatedParent}}" Padding="10,0,30,0" IsHitTestVisible="False"/>
                            <Path x:Name="Arrow" HorizontalAlignment="Right" VerticalAlignment="Center" Width="12" Height="5" Stretch="Fill" Fill="Black" Data="M 0 0 L 5 0 L 2.5 5 Z" Margin="0,0,10,0"/>
                            <Popup Name="PART_Popup" AllowsTransparency="True" IsOpen="{Binding IsChecked, ElementName=toggleButton}" PopupAnimation="Scroll" VerticalOffset="1">
                                <Border x:Name="DropDownBorder" Background="White">
                                    <StackPanel IsItemsHost="True"/>
                                </Border>
                            </Popup>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Стиль для CheckBox-->
    <Style x:Key="ToggleSwitchStyle" TargetType="CheckBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Border x:Name="SwitchBorder" Grid.Column="0" Width="40" Height="20" BorderBrush="#FF646464" BorderThickness="1" CornerRadius="10" Background="White">
                            <!-- Прямоугольник, который действует как сам переключатель -->
                            <Rectangle x:Name="Switch" Width="19" Height="19" Fill="DarkGray" Stroke="#FF646464" StrokeThickness="1" RadiusX="8" RadiusY="8" VerticalAlignment="Center" HorizontalAlignment="Left">
                                <Rectangle.RenderTransform>
                                    <TranslateTransform x:Name="SwitchTranslateTransform"/>
                                </Rectangle.RenderTransform>
                            </Rectangle>
                        </Border>
                        <!-- Текстовая метка, показывающая текущее состояние переключателя -->
                        <TextBlock Grid.Column="1" x:Name="StateLabel" Text="" VerticalAlignment="Center" Margin="5,0,0,0"/>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CheckStates">
                                <!-- Анимации для включенного состояния -->
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="SwitchTranslateTransform" Storyboard.TargetProperty="X" To="20" Duration="0:0:0.2"/>
                                        <!-- Изменяет текст -->
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="StateLabel" Storyboard.TargetProperty="Text">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value=""/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <!-- Изменяет цвет переключателя -->
                                        <ColorAnimation Storyboard.TargetName="Switch" Storyboard.TargetProperty="Fill.Color" To="White" Duration="0:0:0.2"/>
                                        <!-- Изменяет цвет обводки переключателя -->
                                        <ColorAnimation Storyboard.TargetName="Switch" Storyboard.TargetProperty="Stroke.Color" To="Green" Duration="0:0:0.2"/>
                                        <!-- Изменяет цвет границы -->
                                        <ColorAnimation Storyboard.TargetName="SwitchBorder" Storyboard.TargetProperty="BorderBrush.Color" To="Green" Duration="0:0:0.2"/>
                                        <ColorAnimation Storyboard.TargetName="SwitchBorder" Storyboard.TargetProperty="Background.Color" To="Green" Duration="0:0:0.2"/>
                                    </Storyboard>
                                </VisualState>
                                <!-- Анимации для выключенного состояния -->
                                <VisualState x:Name="Unchecked">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="SwitchTranslateTransform" Storyboard.TargetProperty="X" To="0" Duration="0:0:0.2"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="StateLabel" Storyboard.TargetProperty="Text">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value=""/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <!-- Возвращает цвет переключателя -->
                                        <ColorAnimation Storyboard.TargetName="Switch" Storyboard.TargetProperty="Fill.Color" To="DarkGray" Duration="0:0:0.2"/>
                                        <!-- Возвращает цвет обводки переключателя к начальному значению -->
                                        <ColorAnimation Storyboard.TargetName="Switch" Storyboard.TargetProperty="Stroke.Color" To="#FF646464" Duration="0:0:0.2"/>
                                        <!-- Возвращает цвет границы к начальному значению -->
                                        <ColorAnimation Storyboard.TargetName="SwitchBorder" Storyboard.TargetProperty="BorderBrush.Color" To="#FF646464" Duration="0:0:0.2"/>
                                        <ColorAnimation Storyboard.TargetName="SwitchBorder" Storyboard.TargetProperty="Background.Color" To="White" Duration="0:0:0.2"/>

                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="CustomTextBoxStyle" TargetType="TextBox">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="LightGray"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="Margin" Value="0,0,5,0"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Grid>
                        <Border Background="{TemplateBinding Background}" 
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}">
                            <ScrollViewer Margin="0" x:Name="PART_ContentHost"/>
                        </Border>
                        <TextBlock Text="{Binding PlaceholderText, RelativeSource={RelativeSource TemplatedParent}}" 
                               Margin="60,0,0,0" 
                               VerticalAlignment="Center"
                               Foreground="Gray"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>